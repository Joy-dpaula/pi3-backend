generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cartaocredito {
  id           String    @id @default(uuid())
  numero       String    @unique @db.VarChar(16)
  validade     String    @db.VarChar(5)
  cvv          String    @unique @db.VarChar(100)
  nomeTitular  String    @db.VarChar(100)
  bandeira     String    @db.VarChar(20)
  usuarioId    String
  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime
  usuario      usuario   @relation(fields: [usuarioId], references: [id])
  payment      payment[]

  @@index([usuarioId], map: "CartaoCredito_usuarioId_fkey")
}

model compra {
  id        String    @id @default(uuid())
  veiculoId String
  usuarioId String
  status    String    @default("pendente")
  method    String
  timestamp DateTime  @default(now())
  usuario   usuario   @relation(fields: [usuarioId], references: [id])
  veiculo   veiculo   @relation(fields: [veiculoId], references: [id])
  payment   payment[]

  @@index([usuarioId], map: "Compra_usuarioId_fkey")
  @@index([veiculoId], map: "Compra_veiculoId_fkey")
}

model message {
  id        String    @id @default(uuid())
  recipientId String
  content   String
  timestamp DateTime  @default(now())
  usuario_message_recipientIdTousuario usuario  @relation("message_recipientIdTousuario", fields: [recipientId], references: [id])

  @@index([recipientId], map: "Message_recipientId_fkey")
}

model payment {
  id            String         @id @default(uuid())
  usuarioId     String
  paymentMethod String         @db.VarChar(20)
  status        String         @db.VarChar(20)
  pixQRCodeURL  String?        @db.VarChar(255)
  boletoURL     String?        @db.VarChar(255)
  amount        Int
  timestamp     DateTime       @default(now())
  compra        compra         @relation(fields: [compraId], references: [id])
  usuario       usuario        @relation(fields: [usuarioId], references: [id])
  compraId      String
  creditCardId  String?
  creditCard    cartaocredito? @relation(fields: [creditCardId], references: [id])

  @@index([usuarioId], map: "Payment_usuarioId_fkey")
}

model usuario {
  id            String     @id @default(uuid())
  nome          String     @db.VarChar(50)
  cpf           String     @unique(map: "Usuario_cpf_key") @db.VarChar(15)
  telefone      String     @db.VarChar(15)
  email         String     @unique(map: "Usuario_email_key") @db.VarChar(200)
  nascimento    DateTime
  senha         String     @db.VarChar(200)
  cidade        String     @db.VarChar(30)
  estado        String     @db.VarChar(30)
  foto_perfil   String     @default("padr√£o")
  data_registro DateTime   @default(now())
  isAdmin       Boolean    @default(false)
  cartaocredito cartaocredito[]
  compra        compra[]
  message_message_recipientIdTousuario message[] @relation("message_recipientIdTousuario")
  payment       payment[]
  veiculo       veiculo[]
  sessions      sessions[]
}

model sessions {
  id        String   @id @default(uuid())
  id_user   String
  session   String   @db.Text
  usuario   usuario  @relation(fields: [id_user], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model veiculo {
  id           String   @id @default(uuid())
  modelo       String   @db.VarChar(50)
  anoFabricacao Int
  cor          String   @db.VarChar(25)
  descricao    String   @db.VarChar(500)
  valor        Int
  km           Int
  marca        String   @db.VarChar(20)
  foto         String?  @db.VarChar(2000)
  usuarioId    String
  cidade       String   @db.VarChar(30)
  estado       String   @db.VarChar(30)
  cep          String
  complemento  String
  logradouro   String
  numero       String
  cambio       String
  carroceria   String
  combustivel  String
  compra       compra[]
  usuario      usuario  @relation(fields: [usuarioId], references: [id])

  @@index([usuarioId], map: "Veiculo_usuarioId_fkey")
}

model Admin {
  id      String   @id @default(uuid())
  nome    String
  email   String   @unique
  senha   String
  isAdmin Boolean  @default(true)
}
